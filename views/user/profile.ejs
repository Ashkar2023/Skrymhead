<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="css/fonts.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.css" integrity="sha512-hvNR0F/e2J7zPPfLC9auFe3/SE0yG4aJCOd/qxew74NN7eyiSKjr7xJJMu1Jy2wf7FXITpWS1E/RY8yzuXN7VA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.js" integrity="sha512-9KkIqdfN7ipEW6B6k+Aq20PV31bjODg4AA52W+tYtAE0jE0kMx49bjJ3FgvS56wzmyfMUHbQ4Km2b7l9+Y/+Eg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <style>
        #imageDiv {
            min-width: 150px;
            min-height: 150px;
            position: relative;
            transition: filter 0.3s ease;
        }
        
        #imageDiv:hover {
            filter: sepia(50%);
        }
        
        #currentImage{
            min-width: 150px;
            min-height: 150px;
            max-width:200px;
            border-radius: 50%;
        }
        
        #imageEdit{
            position: absolute;
            top:50%;
            left:50%;
            transform: translate(-50%, -50%);
            opacity: 1%;
            transition: opacity 0.3s ease;
        }

        #imageDiv:hover #imageEdit{
            visibility: visible;
            opacity: 100%;
        }
    </style>
</head>

<body>

    <nav class="navbar navbar-sm navbar-expand-lg border-bottom">
        <div class="container-fluid">
            <a class="navbar-brand d-flex align-items-center ms-5 " href="#">
                <svg width="38" height="48" viewBox="0 0 38 48" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path
                        d="M34 1H4L1 5.63571M34 1L37 5.63571L25 24.1786M34 1L22 19.5429M1 5.63571H25L19 14.9071L16 10.2714M1 5.63571L16 28.8143L4 47.3571M1 5.63571L22 38.0857H16H28L10 10.2714M16 10.2714L28 28.8143M16 10.2714L37 42.7214M22 10.2714H10M10 10.2714L22 28.8143M37 42.7214L34 47.3571H4M37 42.7214H13L19 33.45M4 47.3571L1 42.7214L13 24.1786"
                        stroke="black" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
                <h1 class="m-2 text-dark koulen">SKRYMHEAD</h1>
            </a>

            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/home">Home</a>
                    </li>
                    <li class="nav-item dropdown">
                        <button class="btn dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-person-fill"> </i>Account
                        </button>
                        <ul class="dropdown-menu dropdown-menu">
                            <li class="dropdown-item active bg-dark">
                                <a class="nav-link text-white" href="/profile">
                                    <i class="bi bi-person-fill"> </i> User Profile
                                </a>
                            </li>
                            <li class="dropdown-item">
                                <a class="nav-link" href="/password">
                                    <i class="bi bi-key-fill"> </i> Change Password
                                </a>
                            </li>
                            <li class="dropdown-item">
                                <a class="nav-link" href="/address">
                                    <i class="bi bi-person-vcard-fill"> </i> Address
                                </a>
                            </li>
                            <li class="dropdown-item">
                                <a class="nav-link" href="/orders">
                                    <i class="bi bi-box-seam-fill"> </i> Orders
                                </a>
                            </li>
                            <li class="dropdown-item ">
                                <a class="nav-link" href="/wallet">
                                    <i class="bi bi-wallet2"> </i> Skrym-Wallet
                                </a>
                            </li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-danger fw-bold" href="/logout">Logout</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>


    <div class="container mt-5 d-flex justify-content-center">
        <div class="col-lg-6">
            <div class="d-flex justify-content-center" id="PODiv">
                <div class="d-flex border rounded-pill" id="imageDiv">
                    <img src="/users/<%= userData.image_url %>" alt="Profile Image" id="currentImage">

                    <!-- button -->
                    <button class="w-100 h-100 border rounded-pill btn btn-lg btn-transparent" id="imageEdit" data-bs-target="#cropModal" data-bs-toggle="modal">
                        <i class="bi bi-pencil-fill h2 text-white"></i></button>
                </div>
            </div>

            <div class="m-4 text-center mtext-103 p-3 border-1 border-black border">
                <span class="">
                    <%= userData.email %>
                </span>
            </div>

        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="cropModal" tabindex="-1" aria-labelledby="cropModal" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="d-flex justify-content-between m-3">
                    <h1 class="modal-title fs-5" id="cropModalLabel">Select & crop image</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="cropModal">
                    <div class="image-container" style="height: 300px;">
                            <canvas id="cropperCanvas" style="max-width: 400px;"></canvas>
                    </div>
                    <div id="newImage">

                    </div>
                </div>
                
                <div class="modal-footer">
                    <div class="d-flex">
                        <input type="file" accept="image/*" class="form-control" id="inputImage">
                        <button class="btn btn-dark" id="saveButton">save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>


<!-- JavaScript to initialize Cropper -->
<script>
    $(document).ready(function () {
        const canvas = document.getElementById('cropperCanvas');
        const ctx = canvas.getContext('2d');
        let cropper; 

        $('#inputImage').on('change', function (e) {
            const input = e.target;
            const file = input.files[0];

            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const img = new Image();
                    img.onload = function () {
                        canvas.width = img.width;
                        canvas.height = img.height;
                        ctx.drawImage(img, 0, 0, img.width, img.height);

                        if (cropper) {
                            cropper.destroy();
                        }
                        cropper = new Cropper(canvas, {
                            aspectRatio: 1,
                            viewMode: 1,
                            responsive: true,
                            zoomable: false,
                            crop: function (event) {

                                console.log(event.detail);
                            },
                        });

                    };

                    img.src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
        });
        
        $("button.btn-close").on("click",()=>{
            $("input#inputImage").val("")
        })
        
        $('#saveButton').on('click',async function () {
            obj = cropper.getCroppedCanvas();
            console.log(obj)
            obj.toBlob((blob)=>{
                
                const formData = new FormData();
                formData.append("image",blob,"newImage.png");

                fetch("/updatedp", {
                    method: "POST",
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        if(data.success){
                            document.getElementById("currentImage").src = "/users/" + data.newImageUrl;
                            $("#cropModal").modal("hide")
                            console.log(data.message);
                        }
                    })
                    .catch(error => {
                        console.log(error.message)
                    });

            })
        });
    })
</script>



    <div class="container d-flex justify-content-center">
        <div class="col-lg-4">

            <form id="userForm">

                <div class="form-group m-4">
                    <label for="name">Name <small class="ms-2 text-danger" id="N"></small></label>
                    <input value="<%= userData.name %>" type="text" disabled class="form-control" id="name" name="name">
                </div>

                <div class="form-group m-4">
                    <label for="phone">Mobile <small class="ms-2 text-danger" id="P"></small></label>
                    <input value="<%= userData.phone %>" type="number" disabled class="form-control" id="phone"
                        name="phone">
                </div>

                <div class="text-center">
                    <button type="button" id="editButton" class="btn btn-dark my-2 btn-block"><i
                            class="bi bi-pencil-square"></i>Edit</button>
                    <button type="submit" id="submitButton" class="btn btn-dark my-2 btn-block d-none">Submit</button>
                    <button type="button" id="cancelButton" class="btn btn-dark my-2 btn-block d-none">Cancel</button>
                </div>
            </form>
        </div>
    </div>

    

    <script>
        const editButton = document.getElementById('editButton');
        const submitButton = document.getElementById('submitButton');
        const cancelButton = document.getElementById('cancelButton');
        const form = document.getElementById('userForm');


        toggleFormEditable(false);

        editButton.addEventListener('click', function (event) {
            toggleFormEditable(true);

            submitButton.classList.remove('d-none');
            cancelButton.classList.remove('d-none');
            editButton.classList.add('d-none');
        });

        cancelButton.addEventListener('click', function (event) {
            toggleFormEditable(false);

            submitButton.classList.add('d-none');
            cancelButton.classList.add('d-none');
            editButton.classList.remove('d-none');
        });

        form.addEventListener('submit', function (event) {
            event.preventDefault();
            const inputs = form.querySelectorAll('input');
            inputs.forEach(input => {
                input.removeAttribute('disabled');
            });

            const name = document.getElementById("name").value;
            const phone = document.getElementById("phone").value;

            function validate() {
                console.log("heoo")
                let nameRegex = /^[A-Za-z]+(?:\s[A-Za-z]+)?$/;
                let phoneRegex = /^\d$/;
                let nameError = document.getElementById("N");
                let phoneError = document.getElementById("P"), isValid = true;

                if (!name.match(nameRegex)) {
                    nameError.textContent = "Only Alphabets & avoid multiple spaces";
                    isValid = false
                } else {
                    nameError.textContent = "";
                }

                if (phone.length !== 10 && !phone.match(phoneRegex)) {
                    phoneError.textContent = "Enter a valid 10-digit number";
                    isValid = false;
                } else {
                    phoneError.textContent = "";
                }

                console.log(isValid)
                return isValid;
            }

            if (!validate()) return;

            fetch('/updateprofile', {
                method: 'POST',
                headers: {
                    "Content-type": 'application/json',
                },
                body: JSON.stringify({
                    name: name,
                    phone: phone
                })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Toastify({
                            text: "Profile Updated!",
                            duration: 3000,
                            gravity: "top",
                            position: "center",
                            backgroundColor: "#03c03c",
                            stopOnFocus: true
                        }).showToast();
                    } else {
                        Toastify({
                            text: "Profile updation failed!",
                            backgroundColor: "#FD6C1F",
                            duration: 3000,
                            close: true,
                            gravity: "top",
                            position: "center",
                            stopOnFocus: true,
                        }).showToast();

                    }
                    console.log(data.message);
                })
                .catch(error => {
                    console.error('Error:', error);
                })
                .finally(() => {
                    toggleFormEditable(false);

                    submitButton.classList.add('d-none');
                    cancelButton.classList.add('d-none');
                    editButton.classList.remove('d-none');

                })
        });

        function toggleFormEditable(editable) {
            const inputs = form.querySelectorAll('input');
            inputs.forEach(input => {
                if (input.name !== "email") {
                    input.disabled = !editable;
                }
            });
        }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous">
        </script>

</body>

</html>