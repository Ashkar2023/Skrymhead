<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <title>Fine Logger</title>
    <link rel="icon" type="image/x-icon" href="/images/icons/coin.png">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Raleway:wght@200;300;500&family=Honk&family=Protest+Strike&display=swap"
        rel="stylesheet">
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0"/>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <style>
        .fs-med {
            font-size: 0.9em;
            font-family: 'Raleway', sans-serif;
        }

        .fs-md {
            font-size: 1.2em;
            font-weight: 300;
            font-family: 'Raleway', sans-serif;
        }

        .fs-small {
            font-family: 'Raleway', sans-serif;
            font-weight: 200;
        }

        .brand {
            font-family: 'Honk', sans-serif;
            font-size: 3rem;
            font-weight: 400;
        }

        .brand-sm {
            font-family: "Protest Strike";
            font-size: 1.3em;
        }

        .fs-big {
            font-family: 'Raleway', sans-serif;
            font-weight: 500;
            font-size: 2rem;
        }

        .big {
            font-size: 2rem;
        }

        .head-icons{
            filter:drop-shadow(0px 0px 4px #ffc000);
        }

        /* #fineTable-body{
            height: 300px;
            overflow:scroll;
        } */

    </style>
</head>

<body class="bg-black">
    <div class="container-fluid my-3">
        <h1 class="brand text-center">Fine Logger<span
                class="text-warning mx-1 big align-text-middle material-symbols-outlined">
                skull
            </span></h1>
        <div class="text-white text-end">
            <button class="btn p-0">
                <span class="material-symbols-outlined text-success" id="sound" data-enabled="true" onclick="toggleSound(event)">
                    toggle_on
                </span>
            </button>
            <span class="material-symbols-outlined align-text-bottom text-warning">
                graphic_eq
            </span>

            <script>
                function toggleSound(event){
                    if(event.target.dataset.enabled === "true"){
                        event.target.textContent = "toggle_off";
                        event.target.classList.replace("text-success","text-danger")
                        event.target.dataset.enabled = "false";
                        
                    }else if(event.target.dataset.enabled === "false"){
                        event.target.textContent = "toggle_on";
                        event.target.classList.replace("text-danger","text-success")
                        event.target.dataset.enabled = "true";
                    }
                }
            </script>
        </div>

        <!-- ///////////////////////////////// table /////////////////////////////// -->
        <div class="table-wrapper">
            <table class="mt-5 table fs-med table-borderless table-dark">
                <thead>
                    <tr>
                        <th scope="col">Dev's</th>
                        <th scope="col">Today</th>
                        <th scope="col" class="text-danger">Total</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody class="fs-small" id="tableBody">
                    <% fines.forEach(fine=>{ %>
                        <tr data-id='<%= fine._id %>'>
                            <td>
                                <img src="/images/<%= fine.image_url %>" class="head-icons" width="40px" alt="Dev images" loading="lazy">
                                <%= fine.name %>
                            </td>
                            <td class="dailyTotal fs-md">
                                <%= fine.dailyTotal %>
                            </td>
                            <td class="text-danger total fs-md">
                                <%= fine.total %>
                            </td>
                            <td class="fs-big">
                                <button class="btn add btn-sm btn-success px-3" data-devid="<%= fine._id %>">+</button>
                                <button class="btn sub btn-sm btn-danger" data-devid="<%= fine._id %>">-</button>
                            </td>
                        </tr>
                        <% }) %>
                <tbody>
            </table>
        </div>

        <script>
            document.addEventListener("DOMContentLoaded", () => {

                let table = document.getElementById("tableBody");
                const audio = new Audio("/audio/yeah-boy.mp3");
                
                table.addEventListener("click", (event) => {
                    let enabled = document.getElementById("sound").dataset.enabled;

                    if (event.target.classList.contains("add")) {
                        let devID = event.target.dataset.devid;
                        let dailyTotal = event.target.closest("tr").querySelector(".dailyTotal");
                        let total = event.target.closest("tr").querySelector(".total");

                        fetch("/fine/addfive", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify({
                                ID: devID
                            })
                        })
                            .then(response => {
                                if (response.ok || response.status===400) {
                                    return response.json();
                                }
                            })
                            .then(data => {
                                if (data.success) {
                                    dailyTotal.textContent = data.update.dailyTotal;
                                    total.textContent = data.update.total;

                                    Toastify({
                                        text: data.message,
                                        avatar: "/images/coins.png",
                                        duration: 2000,
                                        gravity: 'top',
                                        position: 'center', // Align to the right
                                        stopOnFocus: true, // Stop timeout on hover/focus
                                        className: "brand-sm",
                                        style: {
                                            borderRadius: "5px",
                                            backgroundImage: "linear-gradient(#FF6B6B, #FFA06B, #FFD166)",
                                            color: "#654321",
                                        },
                                        offset: {
                                            y: 40
                                        }
                                    }).showToast();

                                    enabled==="true" ? audio.play(): undefined;

                                } else {
                                    Toastify({
                                        text: data.message,
                                        duration: 2000, // 3 seconds
                                        gravity: 'top', // Display at the top
                                        position: 'center', // Align to the right
                                        backgroundColor: 'transparent', // Green background color
                                        stopOnFocus: true,
                                        style:{
                                            border:'1px solid red'
                                        }
                                    }).showToast();
                                }
                            })
                            .catch(error => {
                                console.log(error.message);
                            })

                    } else if (event.target.classList.contains("sub")) {

                        let devID = event.target.dataset.devid;
                        let dailyTotal = event.target.closest("tr").querySelector(".dailyTotal");
                        let total = event.target.closest("tr").querySelector(".total");

                        fetch("/fine/subfive", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify({
                                ID: devID
                            })
                        })
                            .then(response => {
                                if (response.ok || response.status===400) {
                                    return response.json();
                                }
                            })
                            .then(data => {
                                if (data.success) {
                                    dailyTotal.textContent = data.update.dailyTotal;
                                    total.textContent = data.update.total;

                                    Toastify({
                                        text: data.message,
                                        duration: 2000,
                                        gravity: 'bottom',
                                        position: 'center', // Align to the right
                                        backgroundColor: "transparent", // Green background color
                                        stopOnFocus: true, // Stop timeout on hover/focus
                                        style:{
                                            border:'1px solid red'
                                        }
                                    }).showToast();

                                } else {
                                    Toastify({
                                        text: data.message,
                                        duration: 2000, // 3 seconds
                                        gravity: 'bottom', // Display at the top
                                        position: 'center', // Align to the right
                                        backgroundColor: 'transparent', // Green background color
                                        stopOnFocus: true, // Stop timeout on hover/focus
                                        style:{
                                            border:'1px solid red'
                                        }
                                    }).showToast();
                                }
                            })
                            .catch(error => {
                                console.log(error.message);
                            })

                    }else{

                        let devID = event.target.closest("tr").dataset.id;
                        let gIcon = '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="url(#googleGradient)" class="bi bi-google" viewBox="0 0 16 16"><defs><linearGradient id="googleGradient" x1="0%" y1="0%" x2="100%" y2="100%"><stop offset="0%" style="stop-color:#4285F4;" /><stop offset="25%" style="stop-color:#DB4437;" /><stop offset="50%" style="stop-color:#F4B400;" /><stop offset="75%" style="stop-color:#0F9D58;" /></linearGradient></defs><path d="M15.545 6.558a9.4 9.4 0 0 1 .139 1.626c0 2.434-.87 4.492-2.384 5.885h.002C11.978 15.292 10.158 16 8 16A8 8 0 1 1 8 0a7.7 7.7 0 0 1 5.352 2.082l-2.284 2.284A4.35 4.35 0 0 0 8 3.166c-2.087 0-3.86 1.408-4.492 3.304a4.8 4.8 0 0 0 0 3.063h.003c.635 1.893 2.405 3.301 4.492 3.301 1.078 0 2.004-.276 2.722-.764h-.003a3.7 3.7 0 0 0 1.599-2.431H8v-3.08z"/></svg>';

                        fetch("/fine/getdetails", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify({
                                ID: devID
                            })
                        })
                            .then(response => {
                                if (response.ok || response.status===400) {
                                    return response.json();
                                }
                            })
                            .then(data => {
                                if(data.success){
                                    const table = `<div style="min-height:200px;max-height:300px;overflow:auto;"><table class="">
                                                    <thead class="sticky-top bg-dark fs-med">
                                                        <tr class="align-text-top">
                                                            <th scope="col" style="width:34%;">Date</th>
                                                            <th scope="col" style="width:33%;">Daily amount</th>
                                                            <th scope="col" style="width:33%;">Pending Total</th>
                                                            <th scope="col"></th>
                                                        </tr>
                                                    </thead>
                                                    <tbody class="fs-small">
                                                        ${data.details.log.map(detail => {
                                                            const date = moment(detail.date);
                                                            const  fd = date.format("DD ddd"); 
                                                            return `<tr>
                                                                        <td>
                                                                            ${fd}
                                                                        </td>
                                                                        <td>
                                                                            ${detail.amount}
                                                                        </td>
                                                                        <td>
                                                                            ${detail.pending}    
                                                                        </td>
                                                                    </tr>`    
                                                        }).join("")}
                                                    <tbody>
                                                    </table></div>`
                                    const button = `<div class="text-end mt-2"><a href="${`upi://pay?pa=ashkarmuhammed5@okaxis&cu=INR&am=${data.details.total}&tn=fine`}"><button class="btn btn-light border px-4">${gIcon}<span class="ms-1 fs-small fw-bold">Pay</span></button></a></div>`;
                                    const htmlBlock = table+button;
                                    $('#modal-body').html(htmlBlock);
                                }

                                $('#detailModal').modal('show');
                                
                            })
                            .catch(error=>{
                                console.log(error.message)
                            })


                    }
                })
            })
            
        </script>
    </div>

    <!--////////////////////////////////  Modal ////////////////////////////////-->
    <div class="modal  fade" id="detailModal" tabindex="-1" role="dialog">
        <div class="modal-dialog  mx-3 modal-dialog-centered" role="document">
            <div class="modal-content bg-dark ">
                <div class="modal-body text-white" id="modal-body">
                   
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js" integrity="sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script src="https://cdn.jsdelivr.net/npm/moment@2.30.1/moment.min.js"></script>
</body>
</html