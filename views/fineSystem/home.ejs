<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <title>Fine Logger</title>
    <link rel="icon" type="image/x-icon" href="/images/icons/coin.png">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Raleway:wght@200;500&family=Honk&family=Protest+Strike&display=swap"
        rel="stylesheet">
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />

    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <style>
        .fs-med {
            font-size: 0.9em;
            font-family: 'Raleway', sans-serif;
        }

        .fs-small {
            /* font-size: ; */
            font-family: 'Raleway', sans-serif;
            font-weight: 200;
        }

        .brand {
            font-family: 'Honk', sans-serif;
            font-size: 3rem;
            font-weight: 400;
        }

        .brand-sm {
            font-family: "Protest Strike";
            font-size: 1.3em;
        }

        .fs-big {
            font-family: 'Raleway', sans-serif;
            font-weight: 500;
            font-size: 2rem;
        }

        .big {
            font-size: 2rem;
        }
    </style>
</head>

<body class="bg-black">
    <div class="container-fluid my-3">
        <h1 class="brand text-center">Fine Logger<span
                class="text-warning mx-1 big align-text-middle material-symbols-outlined">
                skull
            </span></h1>
        <div class="text-white text-end">
            <button class="btn p-0">
                <span class="material-symbols-outlined text-success" id="sound" data-enabled="true" onclick="toggleSound(event)">
                    toggle_on
                </span>
            </button>
            <span class="material-symbols-outlined align-text-bottom text-warning">
                graphic_eq
            </span>

            <script>
                function toggleSound(event){
                    if(event.target.dataset.enabled === "true"){
                        event.target.textContent = "toggle_off";
                        event.target.classList.replace("text-success","text-danger")
                        event.target.dataset.enabled = "false";
                        
                    }else if(event.target.dataset.enabled === "false"){
                        event.target.textContent = "toggle_on";
                        event.target.classList.replace("text-danger","text-success")
                        event.target.dataset.enabled = "true";
                    }
                }
            </script>
        </div>

        <div class="">
            <table class="mt-5 table fs-med table-borderless table-dark">
                <thead>
                    <tr>
                        <th scope="col">Dev's</th>
                        <th scope="col">Today</th>
                        <th scope="col" class="text-danger">Total</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody class="fs-small" id="tableBody">
                    <% fines.forEach(fine=>{ %>
                        <tr>
                            <td>
                                <img src="/images/<%= fine.image_url %>" width="40px" alt="Dev images">
                                <%= fine.name %>
                            </td>
                            <td class="dailyTotal">
                                <%= fine.dailyTotal %>
                            </td>
                            <td class="text-danger total">
                                <%= fine.total %>
                            </td>
                            <td class="fs-big">
                                <button class="btn add btn-sm btn-success px-3" data-devid="<%= fine._id %>">+</button>
                                <button class="btn sub btn-sm btn-danger" data-devid="<%= fine._id %>">-</button>
                            </td>
                        </tr>
                        <% }) %>
                <tbody>
            </table>
        </div>

        <script>
            document.addEventListener("DOMContentLoaded", () => {

                let table = document.getElementById("tableBody");
                const audio = new Audio("/audio/yeah-boy.mp3");
                
                table.addEventListener("click", (event) => {
                    let enabled = document.getElementById("sound").dataset.enabled;

                    if (event.target.classList.contains("add")) {
                        let devID = event.target.dataset.devid;
                        let dailyTotal = event.target.closest("tr").querySelector(".dailyTotal");
                        let total = event.target.closest("tr").querySelector(".total");

                        fetch("/fine/addfive", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify({
                                ID: devID
                            })
                        })
                            .then(response => {
                                if (response.ok || response.status===400) {
                                    return response.json();
                                }
                            })
                            .then(data => {
                                if (data.success) {
                                    dailyTotal.textContent = data.update.dailyTotal;
                                    total.textContent = data.update.total;

                                    Toastify({
                                        text: data.message,
                                        avatar: "/images/coins.png",
                                        duration: 2000,
                                        gravity: 'top',
                                        position: 'center', // Align to the right
                                        stopOnFocus: true, // Stop timeout on hover/focus
                                        className: "brand-sm",
                                        style: {
                                            borderRadius: "5px",
                                            backgroundImage: "linear-gradient(#FF6B6B, #FFA06B, #FFD166)",
                                            color: "#654321",
                                        },
                                        offset: {
                                            y: 40
                                        }
                                    }).showToast();

                                    enabled==="true" ? audio.play(): undefined;

                                } else {
                                    Toastify({
                                        text: data.message,
                                        duration: 2000, // 3 seconds
                                        gravity: 'top', // Display at the top
                                        position: 'center', // Align to the right
                                        backgroundColor: 'transparent', // Green background color
                                        stopOnFocus: true,
                                        style:{
                                            border:'1px solid red'
                                        }
                                    }).showToast();
                                }
                            })
                            .catch(error => {
                                console.log(error.message);
                            })

                    } else if (event.target.classList.contains("sub")) {

                        let devID = event.target.dataset.devid;
                        let dailyTotal = event.target.closest("tr").querySelector(".dailyTotal");
                        let total = event.target.closest("tr").querySelector(".total");

                        fetch("/fine/subfive", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify({
                                ID: devID
                            })
                        })
                            .then(response => {
                                if (response.ok || response.status===400) {
                                    return response.json();
                                }
                            })
                            .then(data => {
                                if (data.success) {
                                    dailyTotal.textContent = data.update.dailyTotal;
                                    total.textContent = data.update.total;

                                    Toastify({
                                        text: data.message,
                                        duration: 2000,
                                        gravity: 'bottom',
                                        position: 'center', // Align to the right
                                        backgroundColor: "transparent", // Green background color
                                        stopOnFocus: true, // Stop timeout on hover/focus
                                        style:{
                                            border:'1px solid red'
                                        }
                                    }).showToast();

                                } else {
                                    Toastify({
                                        text: data.message,
                                        duration: 2000, // 3 seconds
                                        gravity: 'bottom', // Display at the top
                                        position: 'center', // Align to the right
                                        backgroundColor: 'transparent', // Green background color
                                        stopOnFocus: true, // Stop timeout on hover/focus
                                        style:{
                                            border:'1px solid red'
                                        }
                                    }).showToast();
                                }
                            })
                            .catch(error => {
                                console.log(error.message);
                            })

                    }
                })
            })
        </script>

        <!-- </div> -->
    </div>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
</body>

</html